#543. Diameter of Binary Tree - Easy
Given the root of a binary tree, return the length of the diameter of the tree.

The diameter of a binary tree is the length of the longest path between any two nodes in a tree. This path may or may not pass through the root.

The length of a path between two nodes is represented by the number of edges between them.

 

Example 1:


Input: root = [1,2,3,4,5]
Output: 3
Explanation: 3is the length of the path [4,2,1,3] or [5,2,1,3].
Example 2:

Input: root = [1,2]
Output: 1
 

Constraints:

The number of nodes in the tree is in the range [1, 104].
-100 <= Node.val <= 100



class Solution:
  def path_length(self, root):
    if root:
      left_path = self.path_length(root.left)
      right_path = self.path_length(root.right)
      path = left_path + right_path
      if path > self.diameter:
        self.diameter = path
      return max(left_path, right_path)+1
      
    return 0
  def diameterOfBinaryTree(self, root):
    self.diameter = 0
    self.path_length(root)
    return self.diameter
  
  
