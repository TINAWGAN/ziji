###graphs
theme_gray()   ###theme with a grey background and white gridlines
theme_bw(base_size = 12)  ###theme dark on line
theme_void()  # everything empty
theme_minimal # no bacground

# main title
p + theme(plot.title = element_text(family, face="bold", colour, size=12))
# x axis title 
p + theme(axis.title.x = element_text(family, face, colour, size))
# y axis title
p + theme(axis.title.y = element_text(family, face, colour, size))
# legend title
p + theme(legend.title = element_text(family, face, colour, size))
# legend item labels
p + theme(legend.text=element_text(family, face, colour, size))
# border around plotting area
p +  theme(panel.background=element_text(family, face, colour, size))
# major, minor grid
p +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())	
# lines along axes
p + theme( axis.line = element_line(colour = "black")  axis.line.x; axis.line.y 
# tick labels along axes
p + theme(axis.text = element_blank()) axis.text.x;axis.text.y
# caption below the plot (text appearance) 
p + theme(plot.caption = element_blank())

# family : font family
# face : font face. Possible values are “plain”, “italic”, “bold” and “bold.italic”
# colour : text color
# size : text size in pts
# hjust : horizontal justification (in [0, 1])
# vjust : vertical justification (in [0, 1])
# lineheight : line height. In multi-line text, the lineheight argument is used to change the spacing between lines.



plot + geom_hline(aes(yintercept=Avg_Renewable, linetype = paste0("All Corporate Issuers\n", percent(Avg_Renewable))),colour = "red")
### use aes can assign a variable  geom_hline to add horizontal line;
geom_vline  #add vertical line

scale_linetype_manual(name = "Averages\n(Weighted by\nMarket Share)", values = c(2, 2, 2), guide = guide_legend(override.aes = list(color = c("skyblue", "red", "lightgreen"))))
### change linetype 
scale_xxx_manual  #manually change linetype, change color, change shape, change size, fill


### adjust the width of x-axis -> use geom_rect  geom_rect is to draw recetangular
  Data$right = cumsum(Data$`BondMarketShare%`)
  Data$left = Data$right - Data$`BondMarketShare%`
  plot <- ggplot(Data)+
    geom_rect(aes(xmin = left, xmax = right, ymax = `Total`, ymin = 0),
              fill = rep(c("tan3", "tan2"),length.out=as.numeric(count(Data))))+
    geom_rect(aes(xmin = left, xmax = right, ymax = `2022RenewablesCap%`, ymin = 0),
              fill = rep(c("royalblue3", "royalblue2"), length.out=as.numeric(count(Data))))+
    geom_rect(aes(xmin = left, xmax = right, ymax = 0, ymin = -.05, fill = `HasGreenBond`))+
    geom_rect(aes(xmin = left, xmax = (left + ((right-left)*`% Green of Issuer's Total`)),
                  ymax = 0, ymin = -.05), fill = "yellowgreen")+
    scale_fill_manual(values=c("grey45", "grey", "yellowgreen"),
                      name = "Bond Types",
                      labels = c("Non-Green Bond", "Green Bond Issuer,\nNon-Green Bond", "Green Bonds"))+
    xlab("Share of Total Bonds Outstanding in Power Sector (Width Indicates %)")+
    ylab("Share of Renewable (ex-hydro) in Total Capacity (%)")+
    ggtitle("Renewables and Green Bond Issuers\nin the Power Sector (2017)")+
    scale_y_continuous(labels=percent, expand = c(0,0))+
    scale_x_continuous(labels=percent, expand = c(0,0))
### scale_x_continuous and scale_y_continuous are the default scales for continuous x and y aesthetics  
#scale_y_continuous(name = waiver(), breaks = waiver(),
#  minor_breaks = waiver(), labels = waiver(), limits = NULL,
#  expand = waiver(), oob = censor, na.value = NA_real_,
#  trans = "identity", position = "left", sec.axis = waiver())
# limit = range
# break -> where the ticks appear
# label is to label the break by assign names ""
rep(x, times = 1, length.out = NA, each = 1)  #  length.out> times   all refers to the length of repetition






###Pie chart 
st_eneg$test <- as.numeric(levels(st_eneg$test))[st_eneg$test]

st_eneg$pos = (cumsum(c(0, st_eneg$test)) + c(st_eneg$test / 2, .01))[1:nrow(st_eneg)]

library(ggrepel)
ggplot(st_eneg, aes(x="", y=test, fill=sector))+
  geom_col(color = 'white', width = 1,
           position = position_stack(reverse = TRUE), 
           show.legend = TRUE)+
  ggtitle("Sector Allocation Capacity in 2016 (Non Green Bond)")+
  coord_polar("y")+
  geom_text_repel(aes(x = 1.4, y = pos,label = paste0(sector, " ", sprintf("%0.2f", round(test, digits = 2)), "%")), 
                  nudge_x = .4, 
                  segment.size = .5, 
                  show.legend = FALSE)+
  theme_void()+theme(plot.title = element_text(hjust = 0.5))
#ggrepel implements functions to repel overlapping text labels away from each other and away from the data 




###line and point

ggplot(data=RenChange ,aes(ymin=0))+
  geom_rect(aes(xmin = left, xmax = right, ymax =`%RenewablesChangeBy2022` , 
                fill = Cat, color = "black"), size = .1)+
  xlab("DebtTicker")+
  ylab("Expected Change of Renewable Shares from 2017 to 2022")+
  ggtitle("Use of Proceed Green Bond vs. Standard Bond Expected Change Renewable Share between 20
ggplot(new_m_2, aes(x=variable, y=value, color=Iss.Yr)) + 
  geom_point(alpha=0.5,size=2) +
  geom_line(aes(group = DebtTicker))+
  scale_x_discrete(name="Change of Renewable Capacity in 1 to 5 Year Window") +
  scale_y_continuous(name="% Rewewable of Issuers' Total Capacity", labels=percent) +
  scale_color_manual(values = c("springgreen", "springgreen2", "springgreen4"))+
  ggtitle("Change in Renewable Capacity of Green Bond Issuers (in 2014-2016 )")+
  facet_wrap(~Iss.Yr)+
  theme_minimal()+
  theme(plot.title = element_text(face="bold"))+
  theme(legend.title=element_text(face="bold"),legend.text=element_text(size=12,hjust = 0.5))+
  theme(strip.text.x = element_text(size = 12, colour = "black", angle = 0))+
  theme(axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 10),
        axis.title=element_text(size=14,face="bold"),
        plot.caption = element_text(size = 10, hjust = 0.5))+
  guides(color=guide_legend("Issued Year"))

#geom_line(data = dummy2, aes(x= Yr, y=Z))+
